<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"            
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:T="clr-namespace:PurchaseSellStock.Template">

    <!--定义按钮样式-->
    <Style TargetType="Button">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="MinWidth" Value="3"/>
        <!--修改模板属性-->
        <Setter Property="Template">
            <Setter.Value>
                <!--控件模板-->
                <ControlTemplate TargetType="Button">
                    <!--背景色-->
                    <Border x:Name="back" Opacity="0.8" CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Button.MinWidth)}">
                        <Border.BitmapEffect>
                            <OuterGlowBitmapEffect Opacity="0.7" GlowSize="0" GlowColor="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Button.Background).(SolidColorBrush.Color)}" />
                        </Border.BitmapEffect>
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1.5">
                                <GradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Button.Background).(SolidColorBrush.Color)}" Offset="0"/>
                                        <GradientStop Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Button.Background).(SolidColorBrush.Color)}" Offset="0.4"/>
                                        <GradientStop Color="#FFF" Offset="1"/>
                                    </GradientStopCollection>
                                </GradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Border.Background>
                        <!--前景色及边框-->
                        <Border x:Name="fore" BorderThickness="1" CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Button.MinWidth)}" BorderBrush="#5555">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="#6FFF" Offset="0.5"/>
                                            <GradientStop Color="#1111" Offset="0.51"/>
                                        </GradientStopCollection>
                                    </GradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.Background>
                            <!--按钮内容-->
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Image x:Name="Button_Image" Source="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(T:MyImageButton.ImageSource)}" Width="20" Height="20" Visibility="Collapsed" Margin="10 0 0 0" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                <ContentPresenter x:Name="content" Grid.Column="1" Content="{TemplateBinding  Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                    </Border>
                    <!--触发器-->
                    <ControlTemplate.Triggers>
                        <!--鼠标移入移出-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation To="6" Duration="0:0:0.2" Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.BitmapEffect).(OuterGlowBitmapEffect.GlowSize)" />
                                        <ColorAnimation To="#AFFF" BeginTime="0:0:0.2" Duration="0:0:0.2" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" />
                                        <ColorAnimation To="#3FFF" BeginTime="0:0:0.2" Duration="0:0:0.2" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.BitmapEffect).(OuterGlowBitmapEffect.GlowSize)" />
                                        <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" />
                                        <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <!--按钮按下弹起-->
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation To="3" Duration="0:0:0.1" Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.BitmapEffect).(OuterGlowBitmapEffect.GlowSize)" />
                                        <ColorAnimation To="#3AAA" Duration="0:0:0.1" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" />
                                        <ColorAnimation To="#2111" Duration="0:0:0.1" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.BitmapEffect).(OuterGlowBitmapEffect.GlowSize)" />
                                        <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" />
                                        <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <!--按钮失效-->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#B444"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation To="0" Duration="0:0:0.3" Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.BitmapEffect).(OuterGlowBitmapEffect.GlowSize)" />
                                        <DoubleAnimation To="1" Duration="0:0:0.1" Storyboard.TargetName="content" Storyboard.TargetProperty="(ContentPresenter.BitmapEffect).(DropShadowBitmapEffect.Opacity)" />
                                        <DoubleAnimation To="-135" Duration="0:0:0.1" Storyboard.TargetName="content" Storyboard.TargetProperty="(ContentPresenter.BitmapEffect).(DropShadowBitmapEffect.Direction)" />
                                        <ColorAnimation To="#FFF" Duration="0:0:0.3" Storyboard.TargetName="content" Storyboard.TargetProperty="(ContentPresenter.BitmapEffect).(DropShadowBitmapEffect.Color)" />
                                        <ColorAnimation To="#D555" Duration="0:0:0.3" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" />
                                        <ColorAnimation To="#CEEE" Duration="0:0:0.3" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" />
                                        <ColorAnimation To="#CDDD" Duration="0:0:0.3" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.BitmapEffect).(OuterGlowBitmapEffect.GlowSize)" />
                                        <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="content" Storyboard.TargetProperty="(ContentPresenter.BitmapEffect).(DropShadowBitmapEffect.Opacity)" />
                                        <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="content" Storyboard.TargetProperty="(ContentPresenter.BitmapEffect).(DropShadowBitmapEffect.Direction)" />
                                        <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="content" Storyboard.TargetProperty="(ContentPresenter.BitmapEffect).(DropShadowBitmapEffect.Color)" />
                                        <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" />
                                        <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" />
                                        <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--TextBoxAc样式-->
    <Style x:Key="textBoxAcLineStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Height" Value="23"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="{TemplateBinding T:TextBoxAc.LabelWidth}" />
                            <ColumnDefinition x:Name="TextBoxAc_Grid" Width="*" />
                        </Grid.ColumnDefinitions>
                        <!--前面的提示名称-->
                        <TextBlock Text="{TemplateBinding T:TextBoxAc.Label}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" Grid.Column="0" />
                        <!--内容-->
                        <ScrollViewer x:Name="PART_ContentHost" Grid.Column="1" />
                        <!--下划线-->
                        <Line Grid.Column="1" X1="0"  Y1="0" X2="{TemplateBinding T:TextBoxAc.Width}" Y2="{TemplateBinding TextBox.Height}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding T:TextBoxAc.LineThickness}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TextBox.IsFocused"  Value="True" >
                            <Setter Property="T:TextBoxAc.LineThickness" Value="4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--文本框样式-->
    <Style x:Key="textBoxLineStyle" TargetType="TextBox">
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Height" Value="23"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="MinWidth" Value="2" />
        <Setter Property="T:MyTextBox.Enter2Tab" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <!--前面的提示名称-->
                        <TextBlock Text="{TemplateBinding T:MyTextBox.Prompt}" Grid.Column="0" />
                        <!--暗示内容-->
                        <TextBlock x:Name="Hint_Text" Grid.Column="1" Foreground="Gray" Text="{TemplateBinding T:MyTextBox.Hint}" Visibility="Hidden" />
                        <!--内容-->
                        <ScrollViewer x:Name="PART_ContentHost" Grid.Column="1"></ScrollViewer>
                        <!--下划线-->
                        <Line Grid.Column="1" X1="0"  Y1="{TemplateBinding Height}" X2="{TemplateBinding Width}" Y2="{TemplateBinding Height}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding MinWidth}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TextBox.IsFocused"  Value="True" >
                            <Setter Property="MinWidth" Value="4" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="TextBox.IsFocused" Value="False"/>
                                <Condition Property="TextBox.Text" Value=""/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Visibility" TargetName="Hint_Text" Value="Visible" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--密码框样式-->
    <Style x:Key="passwordBoxLineStyle" TargetType="PasswordBox">
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Height" Value="23"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="MinWidth" Value="2" />
        <Setter Property="T:MyTextBox.IsMonitoring" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Grid>
                        <!--暗示内容-->
                        <TextBlock x:Name="Hint_PasswordBox" Grid.Column="1" Foreground="Gray" Text="{TemplateBinding T:MyTextBox.Hint}" Visibility="Hidden" VerticalAlignment="Center"/>
                        <ScrollViewer x:Name="PART_ContentHost"></ScrollViewer>
                        <Line X1="0"  Y1="{TemplateBinding Height}" X2="{TemplateBinding Width}" Y2="{TemplateBinding Height}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding MinWidth }" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="PasswordBox.IsFocused"  Value="True">
                            <Setter Property="MinWidth" Value="4" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="PasswordBox.IsFocused" Value="False"/>
                                <Condition Property="T:MyTextBox.PasswordLength" Value="0"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Visibility" TargetName="Hint_PasswordBox" Value="Visible" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--链接样式-->
    <Style TargetType ="Hyperlink">
        <Setter  Property ="Foreground"  Value ="#209AC2" />
        <!-- 清除文字修饰(去掉下划线) -->
        <Setter  Property ="TextBlock.TextDecorations"  Value ="{x:Null}" />
        <Style.Triggers >
            <Trigger  Property ="IsMouseOver"  Value ="True" >
                <Setter  Property ="Foreground"  Value ="#F27D00"   />
                <!-- 在鼠标悬停时显示下划线 -->
                <Setter  Property ="TextBlock.TextDecorations" >
                    <Setter.Value >
                        <TextDecorationCollection >
                            <TextDecoration  Location ="Underline" />
                        </TextDecorationCollection>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>